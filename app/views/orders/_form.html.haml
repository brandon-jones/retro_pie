- params["order"] = {} unless params["order"]
- order = Hash.new
= form_for(@order) do |f|
  -@categories.keys.each do |key|
    - if @categories[key].count > 0
      .p  
        %h3
          =key
      %table.table
        %thead
          %tr
            %th 
            %th Name
            %th Image
            %th Price
            %th Quantity
        %tbody
          -@categories[key].each do |item|
            %tr{class: "#{key.downcase} item-row"}
              %td= check_box_tag key.downcase, item.id, item.base_item, {class: 'checkbox-price-changer price-changer', disabled: item.base_item , name: "order[items][#{item.category.name}][#{item.id}][ordered]", checked: item.base_item || @order.order_items.collect{ |c| c.item_id }.include?(item.id)}
              %td{class: 'title'}= item.title
              %td
                %img{:alt => "#{item.title}", :src => "#{item.image_url}", :style => "width:50px;height:50px"}
              %td{class: 'price'}
                =hidden_field :actual_price, item.markup.gsub('$',''), {name: "order[items][#{item.category.name}][#{item.id}][price]"}
                =hidden_field :base_item, item.base_item, {name: "order[items][#{item.category.name}][#{item.id}][base_item]"}
                =figure_increase_cost(key,item.markup)
              %td
                =quantity_selector(item).html_safe
  =hidden_field :total_price, @order.total || $base_price, {id: 'clean-total', name: "order[total]"}
  =hidden_field :order_id, @order.order_id || '', { name: "order[order_id]"}
  %h3.text-center#total-box
    Total
    %span.total
      =format_init_price

  - if @order.errors.any?
    #error_explanation.field.form-group
      %h2
        = pluralize(@order.errors.count, "error")
        prohibited this order from being saved:
      %ul
        - @order.errors.full_messages.each do |msg|
          %li= msg
  .actions
    = f.submit 'Shipping Information', class: 'btn btn-default'